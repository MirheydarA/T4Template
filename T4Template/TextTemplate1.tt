<#@ template language="C#" hostspecific="true" debug="true" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#


string connectionString = "Server=DESKTOP-00LV7K0\\SQLEXPRESS01;Database=Northwind;Trusted_Connection=True;TrustServerCertificate=True";

    List<string> tableNames = new List<string>();
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        using (SqlCommand command = new SqlCommand("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_CATALOG='Northwind'", connection))
        {
            using (SqlDataReader reader = command.ExecuteReader())
            {
                while (reader.Read())
                {
                    tableNames.Add(reader.GetString(0));
                }
            }
        }
    }

    string modelFolderPath = Path.Combine(Host.ResolvePath("."), "Models");
    if (!Directory.Exists(modelFolderPath))
    {
        Directory.CreateDirectory(modelFolderPath);
    }

    foreach (string tableName in tableNames)
    {
        string classContent = GenerateClassForTable(tableName);
        string classFilePath = Path.Combine(modelFolderPath, tableName + ".cs");

        File.WriteAllText(classFilePath, classContent);
    }

    string GenerateClassForTable(string tableName)
    {
        StringBuilder sb = new StringBuilder();
        sb.AppendLine("namespace Models");
        sb.AppendLine("{");
        sb.AppendLine($"    public class {tableName}");
        sb.AppendLine("    {");

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            connection.Open();
            using (SqlCommand command = new SqlCommand($"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{tableName}' AND TABLE_CATALOG='Northwind'", connection))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string columnName = reader.GetString(0);
                        string dataType = reader.GetString(1);
                        bool isNullable = reader.GetString(2) == "YES";

                        string csharpType = MapSqlTypeToCSharp(dataType, isNullable);

                        sb.AppendLine($"        public {csharpType} {columnName} {{ get; set; }}");
                    }
                }
            }
        }

sb.AppendLine("    }");
sb.AppendLine("}");

        return sb.ToString();
    }

    string MapSqlTypeToCSharp(string sqlType, bool isNullable)
    {
        string csharpType = sqlType switch
        {
            "int" => "int",
            "bigint" => "long",
            "smallint" => "short",
            "decimal" => "decimal",
            "numeric" => "decimal",
            "datetime" => "DateTime",
            "date" => "DateTime",
            "char" => "string",
            "varchar" => "string",
            "text" => "string",
            "nchar" => "string",
            "nvarchar" => "string",
            _ => "object",
        };

        return csharpType;
    }
#>
